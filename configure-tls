#!/usr/bin/env bash

#set -xeuo pipefail

HOST=g2
IP=192.168.10.21

if [[ $# < 2 ]]; then
  echo "A simple tool to configure TLS certificates for docker"
	echo ""
  echo -e "Usage:\n  configure-docker-tls <hostname> <ip>"
	echo ""
	echo " hostname = DNS hostname of server running the docker daemon"
	echo " ip       = IP address of server running the docker daemon"
	echo ""
  exit 1
fi

SCRIPTDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

HOSTDIR=${SCRIPTDIR}/${HOST}

# temporarily used to bypass generation of certs
if false; then

if [[ -d ${HOSTDIR} ]]; then
  mkdir ${HOSTDIR}
fi

echo "1: Generating CA Key"
openssl genrsa -aes256 -out ${HOSTDIR}/${HOST}-ca-key.pem 4096
echo "===================================================="

echo "2: Generating CA Certificate"
openssl req -new -x509 -days 365 -key ${HOSTDIR}/${HOST}-ca-key.pem -sha256 -out ${HOSTDIR}/${HOST}-ca.pem
echo "===================================================="

echo "3: Generating Server Key"
openssl genrsa -out ${HOSTDIR}/${HOST}-server-key.pem 4096
echo "===================================================="

echo "4: Generating Server CSR"
openssl req -subj "/CN=$HOST" -sha256 -new -key ${HOSTDIR}/${HOST}-server-key.pem -out ${HOSTDIR}/${HOST}-server.csr
echo "===================================================="

echo "5: Configuring Server CSR"
echo subjectAltName = DNS:${HOST},IP:${IP},IP:127.0.0.1 >> ${HOSTDIR}/${HOST}-extfile.cnf
echo extendedKeyUsage = serverAuth >> ${HOSTDIR}/${HOST}-extfile.cnf
echo "===================================================="

echo "6: Generate Signed Certificate"
openssl x509 -req -days 365 -sha256 -in ${HOSTDIR}/${HOST}-server.csr -CA ${HOSTDIR}/${HOST}-ca.pem -CAkey ${HOSTDIR}/${HOST}-ca-key.pem -CAcreateserial -out ${HOSTDIR}/${HOST}-server-cert.pem -extfile ${HOSTDIR}/${HOST}-extfile.cnf
echo "===================================================="

echo "7: Generate Client Key"
openssl genrsa -out ${HOSTDIR}/${HOST}-client-key.pem 4096
echo "===================================================="

echo "8: Generate Client CSR"
openssl req -subj '/CN=client' -new -key ${HOSTDIR}/${HOST}-client-key.pem -out ${HOSTDIR}/${HOST}-client.csr
echo "===================================================="

echo "9: Configuring Client"
echo extendedKeyUsage = clientAuth > ${HOSTDIR}/${HOST}-client-extfile.cnf
echo "===================================================="

echo "10: Generate Client Signed Certificate"
openssl x509 -req -days 365 -sha256 -in ${HOSTDIR}/${HOST}-client.csr -CA ${HOSTDIR}/${HOST}-ca.pem -CAkey ${HOSTDIR}/${HOST}-ca-key.pem -CAcreateserial -out ${HOSTDIR}/${HOST}-client-cert.pem -extfile ${HOSTDIR}/${HOST}-client-extfile.cnf
echo "===================================================="

fi

echo "11: Configure Docker: Certificates"
cp ${HOSTDIR}/${HOST}-ca.pem /etc/docker
cp ${HOSTDIR}/${HOST}-server-cert.pem /etc/docker
chmod -v 0444 /etc/docker/${HOST}-ca.pem
chmod -v 0444 /etc/docker/${HOST}-server-cert.pem
echo "===================================================="

echo "12: Configure Docker: Keys"
cp ${HOSTDIR}/${HOST}-server-key.pem /etc/docker
chmod -v 0400 /etc/docker/${HOST}-server-key.pem
echo "===================================================="

echo "13: Configure service: /etc/docker/daemon.json"
cat >/etc/docker/daemon.json <<EOL
{
	"tls": true,
	"tlsverify": true,
	"tlscacert": "/etc/docker/${HOST}-ca.pem",
	"tlscert": "/etc/docker/${HOST}-server-cert.pem",
	"tlskey": "/etc/docker/${HOST}-server-key.pem"
}
EOL
chmod -v 0644 /etc/docker/daemon.json
echo "===================================================="

echo "14: Configure service: /etc/systemd/system/docker.service.d/override.conf"
cat >/etc/systemd/system/docker.service.d/override.conf <<EOL
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd -H fd:// -H tcp://127.0.0.1:2376 -H tcp://${IP}:2376
EOL
chmod -v 0644 /etc/systemd/system/docker.service.d/override.conf
echo "===================================================="

echo "Completed Installation."
echo "- created certificate authority key and certificate"
echo "- created docker server key and certificate"
echo "- created client key and certificate, and signed with server certificate"
echo "- installed certificate authority certificate, server key and key in to /etc/docker"
echo "- configured docker server TLS, using the server certificate and key"
echo "- configured docker server to expose 2736 for TLS connections"
